plugins {
	id "fabric-loom" version "1.8-SNAPSHOT"
	id "org.jetbrains.kotlin.jvm" version "2.0.21"
}

version = project.mod_version
group = project.maven_group

base {
	archivesName = project.archives_base_name
}

repositories {
	mavenCentral()
}

dependencies {
	// Minecraft.
	minecraft "com.mojang:minecraft:${project.minecraft_version}"
	mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
	// Fabric loader.
	modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"
	// Fabric api.
	modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"
	// Fabric language kotlin
	modImplementation("net.fabricmc:fabric-language-kotlin:${project.kotlin_loader_version}")

	// Lombok
	compileOnly("org.projectlombok:lombok:1.18.34")
	annotationProcessor("org.projectlombok:lombok:1.18.34")

	// Reflections
	implementation 'org.reflections:reflections:0.10.2'

	// NanoVG
	implementation("org.lwjgl:lwjgl-nanovg:${project.minecraft_lwjgl_version}")
	["windows", "linux"].forEach {
		implementation("org.lwjgl:lwjgl-nanovg:${project.minecraft_lwjgl_version}:natives-${it}")
	}

}

processResources {
	inputs.property "version", project.version

	filesMatching("fabric.mod.json") {
		expand "version": project.version
	}
}

tasks.withType(JavaCompile).configureEach {
	it.options.release = 21
}

tasks.withType(org.jetbrains.kotlin.gradle.tasks.KotlinCompile).all {
	kotlinOptions {
		jvmTarget = 21
	}
}

java {
//	withSourcesJar() // generate sources jar. (not needed)
	sourceCompatibility = JavaVersion.VERSION_21
	targetCompatibility = JavaVersion.VERSION_21
}

jar {
	from("LICENSE") {
		rename { "${it}_${project.base.archivesName.get()}"}
	}
}

